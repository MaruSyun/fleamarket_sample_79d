= render 'layouts/header'

.item__show
  .item__show__wrapper
    .item__showBox
      .item__showBox__name
        = @item.name
      .item__showBox__body
        %ul
          %li
            = image_tag @item.images.first.image.url, class: "show__image__main"
            %ul
              - @item.images.each do |i|
                %li
                  = image_tag i.image.url, class: "show__image__sub"
      .item__showBox__price
        .item__showBox__price--main
          = "¥#{@item.price}"
        .item__showBox__price--detail
          (税込)
          = @item.shipping_cost
      .item__showBox__detail
        = @item.description
      %table.item__showBox__table
        %tbody
          %tr
            %th 出品者
            %td
              = @item.seller.nickname
          %tr
            %th カテゴリー
            %td
              = link_to '#', class: 'dataLink' do
                = @item.category.parent.parent.name
              %br
              = link_to '#', class: 'dataLink' do
                = @item.category.parent.name
              %br
              = link_to '#', class: 'dataLink' do
                = @item.category.name
          %tr
            %th ブランド
            %td
          %tr
            %th 商品の状態
            %td
              = @item.condition
          %tr
            %th 配送料の負担
            %td
              = @item.shipping_cost
          %tr
            %th 配送元の地域
            %td
              = link_to '#', class: 'dataLink' do
                = @item.prefecture_id
          %tr
            %th 発送日の目安
            %td
              = @item.shipping_day
      %ul.item__showBox__optionalArea
        %li.item__showBox__optionalArea--likeBtn
          = link_to 'お気に入り 0', '#' 
        %li.item__showBox__optionalArea--optionalBtn
          = link_to '不適切な商品の通報', '#'
      - if user_signed_in? && @item.seller.id == current_user.id
        %ul.item__edit-btns
          %li.edit-btn
            = link_to edit_item_path(@item.id), class: "edit-btn-a" do
              編集
          %li.delete-btn
            = link_to item_path(@item.id), class: "delete-btn-a", method: :delete do
              削除
      - elsif user_signed_in?
        - if @item.buyer_id.nil?
          .item__buy-btn
            = link_to item_transacts_path(@item.id), class: "buy-btn-a" do
              購入画面に進む
        - else 
          .item__buy-btn
            = link_to "#", class: "buy-btn-a" do
              SOLD OUT

    - if user_signed_in?
      .commentBox
        .comment-list
          - @commentALL.each do |comment|
            - if comment.user_id == current_user.id   
              -#   コメントユーザーとログインユーザーが同一の場合  
              .comment-Me.comment-one-block{data:{index: comment.id}}                   
                - if comment.delete_check == 1   # 削除済の場合
                  .comment-content
                    出品者によりこのコメントは削除されました。
                    = render 'items/template_comment/comment_delete_restore_btn', comment: comment 
                - else   # 削除されていない場合
                  .comment-content
                    = comment.comment
                    .comment_create_at
                      = comment.created_at.strftime("%Y年%m月%d日 %H時%M分")
                    - if comment.item.seller == current_user
                      .comment-delete.me-pre-delete{data:{index: comment.id}}     
                        = link_to '削除する', comment_path(comment.id) ,method: :patch
                = render 'items/template_comment/comment_name', comment: comment                    
            - else 
              -#   コメントユーザーとログインユーザーが異なる場合
              .comment-Other.comment-one-block{data:{index: comment.id}}    
                = render 'items/template_comment/comment_name', comment: comment               
                - if comment.delete_check == 1   # 削除済の場合
                  .comment-content-other
                    出品者によりこのコメントは削除されました。
                    = render 'items/template_comment/comment_delete_restore_btn', comment: comment               
                - else    # 削除されていない場合
                  .comment-content-other
                    = comment.comment
                    .comment_create_at
                      = comment.created_at.strftime("%Y年%m月%d日 %H時%M分")
                    - if comment.item.seller == current_user   # 出品者とログインユーザーが等しい場合
                      .comment-delete.other-pre-delete{data:{index: comment.id}}     
                        = link_to '削除する', comment_path(comment.id), method: :patch
        -#   投稿フォーム
        - if user_signed_in?              
          = form_with model: @comment, class: "new_comment", local: true do |f|
            = f.text_area :comment, id: "comment_body", wrap: "soft"
            = f.hidden_field :item_id, value: @item.id

            %p.noticeMsg
              相手のことを考えて丁寧なコメントをこころがけましょう。
              %br/
              不快な言葉遣いなどは利用制限や退会処分となることがあります。
            %br/
            %button.commentBtn{name: "button", type: "submit"}
              コメントする
    %ul.pagination
      %li
        = link_to '前の商品', '#', class: 'fa-angle'
      %li
        = link_to '後ろの商品', '#', class: 'fa-angle'
    .item__show__relatedItems
      = link_to 'ベビー・キッズをもっと見る', '#', class: 'item__show__relatedItems'
    .item__show__relatedLists
      .item__show__relatedLists--item
        .item__show__relatedLists--image
          = image_tag "https://s3-ap-northeast-1.amazonaws.com/mercarimaster/uploads/captured_image/content/15/a003.png"
        .item__show__related__list--body
          .item__show__related__list--name
            ee
          .item__show__related__list--details
            %ul
              %li 1000円
      .item__show__relatedLists--item
        .item__show__relatedLists--image
          = image_tag "https://s3-ap-northeast-1.amazonaws.com/mercarimaster/uploads/captured_image/content/15/a003.png"
        .item__show__related__list--body
          .item__show__related__list--name
            ee
          .item__show__related__list--details
            %ul
              %li 1000円

= render 'layouts/footer'

